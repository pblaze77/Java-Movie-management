/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hr.algebra.view;

import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.dal.login.LoginCallBack;
import hr.algebra.enums.Users;
import hr.algebra.model.ApplicationUser;
import hr.algebra.registration.Registration_JFrame;
import hr.algebra.utilities.MessageUtils;
import java.util.Arrays;
import java.util.List;
import java.util.Optional;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.text.JTextComponent;

/**
 *
 * @author Paulo
 */
public class JPanelLogin extends javax.swing.JPanel {
 private static final String LOGIN = "Login";
  private List<JTextComponent> loginFormFields;

    private Repository repository;
    private LoginCallBack loginCallBack;
    /**
     * Creates new form JPanel_Login
     * @param loginCallBack
     */
    public JPanelLogin(LoginCallBack loginCallBack) {
        this.loginCallBack = loginCallBack;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbUsername = new javax.swing.JLabel();
        lbPassword = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        pfPassword = new javax.swing.JPasswordField();
        btnLogin = new javax.swing.JButton();
        lbNotRegistered = new javax.swing.JLabel();
        btnRegister = new javax.swing.JButton();

        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        lbUsername.setText("Username");

        lbPassword.setText("Password");

        btnLogin.setText("Sign in");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        lbNotRegistered.setText("Do not have an account.Sign up!");

        btnRegister.setText("SIgn up");
        btnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegisterActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(222, 222, 222)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lbPassword)
                            .addComponent(lbUsername))
                        .addGap(87, 87, 87)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(276, 276, 276)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(254, 254, 254)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbNotRegistered, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnRegister, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(301, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbUsername))
                .addGap(42, 42, 42)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbPassword)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(42, 42, 42)
                .addComponent(btnLogin)
                .addGap(18, 18, 18)
                .addComponent(lbNotRegistered)
                .addGap(18, 18, 18)
                .addComponent(btnRegister)
                .addContainerGap(160, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
       init();
    }//GEN-LAST:event_formComponentShown

    private void btnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegisterActionPerformed
         JFrame register;
     register = new Registration_JFrame();
        register.setVisible(true);
    }//GEN-LAST:event_btnRegisterActionPerformed

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        checkLogin();
        clearFields();
    }//GEN-LAST:event_btnLoginActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnRegister;
    private javax.swing.JLabel lbNotRegistered;
    private javax.swing.JLabel lbPassword;
    private javax.swing.JLabel lbUsername;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables

    private void init() {
        try {
            initFields();
            initRepository();
        } catch (Exception e) {
            MessageUtils.
                    showErrorMessage
        (LOGIN + " error", "Error while loading repository and fields!");
        }
    }

    private void initFields() {
        loginFormFields = Arrays.asList(
                tfUsername,
                pfPassword
        );
    }

    private void initRepository() {
        repository = RepositoryFactory.getRepository();
    }

   
    private void checkLogin() {
        try {
            String username = tfUsername.getText().trim();
            String password = new String(pfPassword.getPassword());

         Optional<ApplicationUser> appUser = repository.selectUser(username, password);
            Optional<Users> optionalUserRole;
            optionalUserRole = appUser.map(applicationUser -> applicationUser.getRole());

            if (appUser.isPresent() && optionalUserRole.get() == Users.USER) {
                loginCallBack.UserLogin();
                MessageUtils.showInformationMessage(LOGIN, "Logged in " + username + " as " + optionalUserRole.get() + ".");
            } else if (appUser.isPresent() && optionalUserRole.get() == Users.ADMIN) {
                loginCallBack.AdminLogin();
                MessageUtils.showInformationMessage(LOGIN, "Logged in " + username + " as " + optionalUserRole.get() + ".");
            } else {
                MessageUtils.showInformationMessage(LOGIN, "User not found!");
            }
        } catch (Exception ex) {
            Logger.getLogger(JPanelLogin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearFields() {
         loginFormFields.forEach(f -> f.setText(""));
    }
}
